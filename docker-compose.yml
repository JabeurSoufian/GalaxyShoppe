version: '2'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - '2181:2181'
    healthcheck:
      test: ["CMD-SHELL", "echo stat | nc localhost 2181 | grep Mode"]
  kafka:
    image: wurstmeister/kafka
    ports:
      - '9092:9092'
    environment:
      KAFKA_ADVERTISED_LISTENERS: 'INSIDE://kafka:9093,OUTSIDE://localhost:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT'
      KAFKA_LISTENERS: 'INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
    healthcheck:
      test: ["CMD", "nc", "-vz", "localhost", "9092"]
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      zookeeper:
        condition: service_healthy
  config-server:
    build:
      context: .
      dockerfile: Dockerfile
    image: config-server
    ports:
      - '9101:9101'
    healthcheck:
      test:
        - CMD-SHELL
        - >-
          curl http://localhost:9101/actuator/health/readiness | grep UP  ||
          exit 1
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      zookeeper:
        condition: service_healthy
      kafka:
        condition: service_healthy
  eureka-server:
    build:
      context: .
      dockerfile: Dockerfile
    image: eureka-server
    environment:
      - 'SPRING_CLOUD_CONFIG_URI=http://config-server:9101'
    ports:
      - '9102:9102'
    depends_on:
      config-server:
        condition: service_healthy
    healthcheck:
      test:
        - CMD-SHELL
        - >-
          curl http://localhost:9102/actuator/health/readiness | grep UP || exit
          1
      interval: 10s
      timeout: 5s
      retries: 5
  microservice-product:
    build:
      context: .
      dockerfile: Dockerfile
    image: microservice-product
    environment:
      - 'SPRING_CLOUD_CONFIG_URI:http://config-server:9101'
      - 'SPRING_DATASOURCE_URL:jdbc:postgresql://db:5432/galaxy_shoppe'
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=root
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:9102/eureka/
    ports:
      - '9001:9001'
    depends_on:
      config-server:
        condition: service_healthy
      db:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    healthcheck:
      test:
        - CMD-SHELL
        - >-
          curl http://localhost:9001/actuator/health/readiness | grep UP || exit
          1
      interval: 10s
      timeout: 5s
      retries: 5
  microservice-order:
    build:
      context: .
      dockerfile: Dockerfile
    image: microservice-order
    environment:
      - 'SPRING_CLOUD_CONFIG_URI:http://config-server:9101'
      - 'SPRING_DATASOURCE_URL:jdbc:postgresql://db:5432/galaxy_shoppe'
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=root
      - SERVER_PORT=9002
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:9102/eureka/
    ports:
      - '9002:9002'
    depends_on:
      config-server:
        condition: service_healthy
      db:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    healthcheck:
      test:
        - CMD-SHELL
        - >-
          curl http://localhost:9002/actuator/health/readiness | grep UP || exit
          1
      interval: 10s
      timeout: 5s
      retries: 5
  microservice-payment:
    build:
      context: .
      dockerfile: Dockerfile
    image: microservice-payment
    environment:
      - 'SPRING_CLOUD_CONFIG_URI:http://config-server:9101'
      - 'SPRING_DATASOURCE_URL:jdbc:postgresql://db:5432/galaxy_shoppe'
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=root
      - 'SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092'
      - 'KAFKA_GROUP_ID=group-id-1'
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:9102/eureka/
    ports:
      - '9003:9003'
    depends_on:
      config-server:
        condition: service_healthy
      db:
        condition: service_healthy
      kafka:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    healthcheck:
      test:
        - CMD-SHELL
        - >-
          curl http://localhost:9003/actuator/health/readiness | grep UP || exit
          1
      interval: 10s
      timeout: 5s
      retries: 5
  microservice-notification:
    build:
      context: .
      dockerfile: Dockerfile
    image: microservice-notification
    environment:
      - 'SPRING_CLOUD_CONFIG_URI:http://config-server:9101'
      - 'SPRING_DATASOURCE_URL:jdbc:postgresql://db:5432/galaxy_shoppe'
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=root
      - 'SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092'
      - 'KAFKA_GROUP_ID=group-id-1'
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:9102/eureka/
    ports:
      - '9004:9004'
    depends_on:
      config-server:
        condition: service_healthy
      db:
        condition: service_healthy
      kafka:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    healthcheck:
      test:
        - CMD-SHELL
        - >-
          curl http://localhost:9004/actuator/health/readiness | grep UP || exit
          1
      interval: 10s
      timeout: 5s
      retries: 5
  db:
    image: 'postgres:13.1-alpine'
    container_name: db
    environment:
      - POSTGRES_DB=galaxy_shoppe
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=root
    ports:
      - '5432:5432'
    volumes:
      - 'db:/var/lib/postgresql/data'
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U postgres || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  db: null
